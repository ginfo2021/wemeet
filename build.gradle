buildscript {
	repositories {
		mavenCentral()
		jcenter()
		google()
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.8.RELEASE")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

description = "wemeetapp"

jar {
	baseName = 'wemeetapp'
	version =  '1.0'
}

def javaVersion = JavaVersion.VERSION_1_8


sourceCompatibility = javaVersion
targetCompatibility = javaVersion

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
	mavenCentral()
}

//plugins {
//	id 'org.springframework.boot' version '2.3.3.RELEASE'
//	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
//	id 'java'
//	id 'com.palantir.docker' version '0.22.1'
//}
dependencies {
	compile("org.springframework.boot:spring-boot-starter-actuator")
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.flywaydb:flyway-core:5.2.4"
	implementation "mysql:mysql-connector-java"
	implementation "commons-fileupload:commons-fileupload:1.3.1"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "io.jsonwebtoken:jjwt-api:0.11.2"
	implementation "io.jsonwebtoken:jjwt-impl:0.11.2"
	implementation "io.jsonwebtoken:jjwt-jackson:0.11.2"
	implementation "io.springfox:springfox-swagger2:2.9.2"
	implementation "io.springfox:springfox-swagger-ui:2.9.2"
	implementation "com.aventrix.jnanoid:jnanoid:2.0.0"
	implementation "org.slf4j:slf4j-api:1.7.25"
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

task buildDocker (type:Docker, dependsOn: build) {
	applicationName = jar.baseName
	dockerfile = file('Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}

test {
	useJUnitPlatform()
}
